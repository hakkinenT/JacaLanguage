/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.lexer;

import java.io.*;
import jaca.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClasse(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdade(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProcedimento(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFuncao(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipoBool(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipoReal(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THeranca(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TObjeto(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVariavel(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstante(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TELogico(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOuLogico(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMetodoImprime(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMetodoLe(line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelacaoSymbol(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirgula(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicioProced(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParEsq(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParDir(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSoma(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenor(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorIgual(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNegacao(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVazio(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdClass(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumeroReal(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {35, 35, 6}, {37, 37, 7}, {38, 38, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {65, 90, 23}, {95, 95, 24}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 25}, {101, 101, 28}, {102, 102, 29}, {103, 104, 25}, {105, 105, 30}, {106, 110, 25}, {111, 111, 31}, {112, 112, 32}, {113, 113, 25}, {114, 114, 33}, {115, 115, 34}, {116, 117, 25}, {118, 118, 35}, {119, 122, 25}, {123, 123, 36}, {195, 195, 37}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {{0, 9, 38}, {11, 65535, 38}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{105, 105, 39}, {108, 108, 40}, },
            {},
            {{44, 44, 41}, {48, 57, 17}, {69, 69, 42}, {101, 101, 43}, },
            {{61, 61, 44}, },
            {},
            {{61, 61, 45}, },
            {{61, 61, 46}, },
            {{62, 62, 47}, },
            {{65, 90, 48}, {95, 95, 49}, {97, 122, 50}, {195, 195, 51}, },
            {{65, 90, 52}, {95, 95, 53}, {97, 122, 54}, {195, 195, 55}, },
            {{65, 195, -25}, },
            {{65, 95, -25}, {97, 110, 50}, {111, 111, 56}, {112, 122, 50}, {195, 195, 51}, },
            {{65, 95, -25}, {97, 107, 50}, {108, 108, 57}, {109, 110, 50}, {111, 111, 58}, {112, 195, -28}, },
            {{65, 95, -25}, {97, 109, 50}, {110, 110, 59}, {111, 122, 50}, {195, 195, 51}, },
            {{65, 95, -25}, {97, 97, 60}, {98, 104, 50}, {105, 105, 61}, {106, 116, 50}, {117, 117, 62}, {118, 122, 50}, {195, 195, 51}, },
            {{65, 109, -30}, {110, 110, 63}, {111, 195, -30}, },
            {{65, 95, -25}, {97, 97, 50}, {98, 98, 64}, {99, 116, 50}, {117, 117, 65}, {118, 195, -31}, },
            {{65, 95, -25}, {97, 113, 50}, {114, 114, 66}, {115, 122, 50}, {195, 195, 51}, },
            {{65, 95, -25}, {97, 100, 50}, {101, 101, 67}, {102, 122, 50}, {195, 195, 51}, },
            {{65, 100, -35}, {101, 101, 68}, {102, 195, -35}, },
            {{65, 95, -25}, {97, 97, 69}, {98, 100, 50}, {101, 101, 70}, {102, 195, -35}, },
            {{0, 124, 71}, {125, 125, 72}, {126, 65535, 71}, },
            {{160, 160, 73}, {161, 161, 74}, {162, 162, 75}, {163, 163, 76}, {167, 167, 77}, {168, 168, 78}, {169, 169, 79}, {170, 170, 80}, {172, 172, 81}, {173, 173, 82}, {174, 174, 83}, {178, 178, 84}, {179, 179, 85}, {180, 180, 86}, {181, 181, 87}, {185, 185, 88}, {186, 186, 89}, {187, 187, 90}, {338, 338, 91}, {352, 352, 92}, {353, 353, 93}, {381, 381, 94}, {402, 402, 95}, {710, 710, 96}, {8217, 8217, 97}, {8218, 8218, 98}, {8220, 8220, 99}, {8221, 8221, 100}, {8225, 8225, 101}, {8226, 8226, 102}, {8240, 8240, 103}, {8250, 8250, 104}, {8364, 8364, 105}, {8482, 8482, 106}, {65533, 65533, 107}, },
            {{0, 65535, -8}, },
            {{109, 109, 108}, },
            {{195, 195, 109}, },
            {{48, 57, 110}, },
            {{45, 45, 111}, },
            {{45, 45, 111}, },
            {},
            {},
            {},
            {{62, 62, 112}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{160, 160, 113}, {161, 161, 114}, {162, 162, 115}, {163, 163, 116}, {167, 167, 117}, {168, 168, 118}, {169, 169, 119}, {170, 170, 120}, {172, 172, 121}, {173, 173, 122}, {174, 174, 123}, {178, 178, 124}, {179, 179, 125}, {180, 180, 126}, {181, 181, 127}, {185, 185, 128}, {186, 186, 129}, {187, 187, 130}, {338, 338, 131}, {352, 352, 132}, {353, 353, 133}, {381, 381, 134}, {402, 402, 135}, {710, 710, 136}, {8217, 8217, 137}, {8218, 8218, 138}, {8220, 8220, 139}, {8221, 8221, 140}, {8225, 8225, 141}, {8226, 8226, 142}, {8240, 8240, 143}, {8250, 8250, 144}, {8364, 8364, 145}, {8482, 8482, 146}, {65533, 65533, 147}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{160, 160, 148}, {161, 161, 149}, {162, 162, 150}, {163, 163, 151}, {167, 167, 152}, {168, 168, 153}, {169, 169, 154}, {170, 170, 155}, {172, 172, 156}, {173, 173, 157}, {174, 174, 158}, {178, 178, 159}, {179, 179, 160}, {180, 180, 161}, {181, 181, 162}, {185, 185, 163}, {186, 186, 164}, {187, 187, 165}, {338, 338, 166}, {352, 352, 167}, {353, 353, 168}, {381, 381, 169}, {402, 402, 170}, {710, 710, 171}, {8217, 8217, 172}, {8218, 8218, 173}, {8220, 8220, 174}, {8221, 8221, 175}, {8225, 8225, 176}, {8226, 8226, 177}, {8240, 8240, 178}, {8250, 8250, 179}, {8364, 8364, 180}, {8482, 8482, 181}, {65533, 65533, 182}, },
            {{65, 110, -28}, {111, 111, 183}, {112, 195, -28}, },
            {{65, 95, -25}, {97, 97, 184}, {98, 122, 50}, {195, 195, 51}, },
            {{65, 109, -30}, {110, 110, 185}, {111, 195, -30}, },
            {{65, 95, -25}, {97, 112, 50}, {113, 113, 186}, {114, 122, 50}, {195, 195, 51}, },
            {{65, 107, -29}, {108, 108, 187}, {109, 122, 50}, {195, 195, 51}, },
            {{65, 107, -29}, {108, 108, 188}, {109, 109, 189}, {110, 122, 50}, {195, 195, 51}, },
            {{65, 109, -30}, {110, 110, 190}, {111, 195, -30}, },
            {{65, 122, -25}, {195, 195, 191}, },
            {{65, 95, -25}, {97, 105, 50}, {106, 106, 192}, {107, 122, 50}, {195, 195, 51}, },
            {{65, 195, -25}, },
            {{65, 110, -28}, {111, 111, 193}, {112, 195, -28}, },
            {{65, 95, -25}, {97, 97, 194}, {98, 195, -59}, },
            {{65, 109, -30}, {110, 110, 195}, {111, 195, -30}, },
            {{65, 113, -34}, {114, 114, 196}, {115, 195, -34}, },
            {{65, 113, -34}, {114, 114, 197}, {115, 195, -34}, },
            {{0, 65535, -38}, },
            {},
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{112, 112, 198}, },
            {{170, 170, 199}, },
            {{48, 57, 110}, },
            {{48, 57, 200}, },
            {},
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -25}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 195, -26}, },
            {{65, 107, -29}, {108, 108, 201}, {109, 195, -62}, },
            {{65, 95, -25}, {97, 114, 50}, {115, 115, 202}, {116, 122, 50}, {195, 195, 51}, },
            {{65, 114, -186}, {115, 115, 203}, {116, 195, -186}, },
            {{65, 95, -25}, {97, 116, 50}, {117, 117, 204}, {118, 195, -31}, },
            {{65, 114, -186}, {115, 115, 205}, {116, 195, -186}, },
            {{65, 95, -25}, {97, 103, 50}, {104, 104, 206}, {105, 122, 50}, {195, 195, 51}, },
            {{65, 195, -25}, },
            {{65, 122, -25}, {195, 195, 207}, },
            {{160, 172, -53}, {173, 173, 208}, {174, 65533, -53}, },
            {{65, 100, -35}, {101, 101, 209}, {102, 195, -35}, },
            {{65, 95, -25}, {97, 98, 50}, {99, 99, 210}, {100, 122, 50}, {195, 195, 51}, },
            {{65, 107, -29}, {108, 108, 211}, {109, 195, -62}, },
            {{65, 122, -25}, {195, 195, 212}, },
            {{65, 195, -25}, },
            {{65, 95, -25}, {97, 99, 50}, {100, 100, 213}, {101, 122, 50}, {195, 195, 51}, },
            {{114, 114, 214}, },
            {},
            {{48, 57, 200}, },
            {{65, 195, -25}, },
            {{65, 114, -186}, {115, 115, 215}, {116, 195, -186}, },
            {{65, 95, -25}, {97, 115, 50}, {116, 116, 216}, {117, 122, 50}, {195, 195, 51}, },
            {{65, 95, -25}, {97, 97, 217}, {98, 195, -59}, },
            {{65, 110, -28}, {111, 111, 218}, {112, 195, -28}, },
            {{65, 95, -25}, {97, 97, 219}, {98, 195, -59}, },
            {{160, 163, -53}, {167, 167, 220}, {168, 65533, -53}, },
            {{65, 98, -195}, {99, 99, 221}, {100, 195, -195}, },
            {{65, 115, -205}, {116, 116, 222}, {117, 195, -205}, },
            {{65, 100, -35}, {101, 101, 223}, {102, 195, -35}, },
            {{65, 195, -25}, },
            {{160, 162, -53}, {163, 163, 224}, {167, 65533, -53}, },
            {{65, 95, -25}, {97, 97, 225}, {98, 195, -59}, },
            {{105, 105, 226}, },
            {{65, 100, -35}, {101, 101, 227}, {102, 195, -35}, },
            {{65, 195, -25}, },
            {{65, 109, -30}, {110, 110, 228}, {111, 195, -30}, },
            {{65, 195, -25}, },
            {{32, 32, 229}, {65, 195, -25}, },
            {{65, 122, -25}, {195, 195, 230}, },
            {{65, 95, -25}, {97, 104, 50}, {105, 105, 231}, {106, 122, 50}, {195, 195, 51}, },
            {{65, 110, -28}, {111, 111, 232}, {112, 195, -28}, },
            {{65, 99, -199}, {100, 100, 233}, {101, 195, -199}, },
            {{65, 110, -28}, {111, 111, 234}, {112, 195, -28}, },
            {{65, 99, -199}, {100, 100, 235}, {101, 195, -199}, },
            {{109, 109, 236}, },
            {{65, 195, -25}, },
            {{65, 115, -205}, {116, 116, 237}, {117, 195, -205}, },
            {{100, 100, 238}, },
            {{160, 162, -53}, {163, 163, 239}, {167, 65533, -53}, },
            {{65, 110, -28}, {111, 111, 240}, {112, 195, -28}, },
            {{65, 195, -25}, },
            {{65, 104, -223}, {105, 105, 241}, {106, 195, -223}, },
            {{65, 195, -25}, },
            {{65, 100, -35}, {101, 101, 242}, {102, 195, -35}, },
            {{101, 101, 243}, },
            {{65, 110, -28}, {111, 111, 244}, {112, 195, -28}, },
            {{97, 97, 245}, },
            {{65, 110, -28}, {111, 111, 246}, {112, 195, -28}, },
            {{65, 195, -25}, },
            {{65, 95, -25}, {97, 108, 50}, {109, 109, 247}, {110, 195, -63}, },
            {{65, 195, -25}, },
            {},
            {{65, 195, -25}, },
            {{32, 32, 248}, },
            {{65, 195, -25}, },
            {{65, 100, -35}, {101, 101, 249}, {102, 195, -35}, },
            {{99, 99, 250}, },
            {{65, 109, -30}, {110, 110, 251}, {111, 195, -30}, },
            {{108, 108, 252}, },
            {{65, 115, -205}, {116, 116, 253}, {117, 195, -205}, },
            {{97, 97, 254}, },
            {{65, 110, -28}, {111, 111, 255}, {112, 195, -28}, },
            {{115, 115, 256}, },
            {{65, 195, -25}, },
            {{115, 115, 257}, },
            {{101, 101, 258}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 39, 39, 39, 39, 38, 20, 34, 22, 26, 27, 32, 30, 28, 31, 29, 33, -1, -1, 23, 36, -1, -1, 40, 41, 40, 40, 40, 16, 40, 40, 40, 40, 40, 40, 40, -1, -1, 20, -1, -1, -1, -1, -1, 24, 37, 35, -1, 40, 40, 40, -1, 41, 41, 41, -1, 40, 40, 40, 40, 40, 40, 40, 40, 40, 17, 40, 40, 5, 40, 40, -1, 21, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, -1, 42, -1, 25, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 40, 40, 40, 40, 40, 40, 1, 40, -1, 40, 40, 40, 40, 14, 40, -1, 19, 42, 10, 40, 40, 40, 40, 40, -1, 40, 40, 40, 11, -1, 40, -1, 40, 15, 40, 4, 40, 40, 40, 40, 40, 40, 40, -1, 2, 40, -1, -1, 40, 13, 40, 6, 40, -1, 40, -1, 40, 0, 40, 3, 18, 7, -1, 9, 40, -1, 40, -1, 40, -1, 40, -1, 8, -1, -1, 12, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
