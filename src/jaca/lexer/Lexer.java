/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.lexer;

import java.io.*;
import jaca.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicio(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFim(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClasse(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVerdade(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalso(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSe(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSenao(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnquanto(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProcedimento(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFuncao(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipoBool(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTipoReal(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THeranca(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TObjeto(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVariavel(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConstante(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TELogico(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOuLogico(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMetodoImprime(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMetodoLe(line, pos); }
    Token new20(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentario(text, line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComentarioBloco(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRelacaoSymbol(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPontoVirgula(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAtribuicao(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInicioProced(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParEsq(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParDir(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirgula(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPonto(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSoma(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenos(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIgual(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenor(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMenorIgual(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNegacao(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarra(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVazio(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdClass(text, line, pos); }
    Token new43(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumeroReal(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {33, 33, 5}, {35, 35, 6}, {37, 37, 7}, {38, 38, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {65, 90, 23}, {95, 95, 24}, {97, 97, 25}, {98, 98, 26}, {99, 99, 27}, {100, 100, 25}, {101, 101, 28}, {102, 102, 29}, {103, 104, 25}, {105, 105, 30}, {106, 110, 25}, {111, 111, 31}, {112, 112, 32}, {113, 113, 25}, {114, 114, 33}, {115, 115, 34}, {116, 117, 25}, {118, 118, 35}, {119, 122, 25}, {123, 123, 36}, {124, 124, 37}, {192, 192, 38}, {193, 193, 39}, {194, 194, 40}, {195, 195, 41}, {199, 199, 42}, {200, 200, 43}, {201, 201, 44}, {202, 202, 45}, {204, 204, 46}, {205, 205, 47}, {206, 206, 48}, {210, 210, 49}, {211, 211, 50}, {212, 212, 51}, {213, 213, 52}, {217, 217, 53}, {218, 218, 54}, {219, 219, 55}, {224, 224, 56}, {225, 225, 57}, {226, 226, 58}, {227, 227, 59}, {231, 231, 60}, {232, 232, 61}, {233, 233, 62}, {234, 234, 63}, {236, 236, 64}, {237, 237, 65}, {238, 238, 66}, {242, 242, 67}, {243, 243, 68}, {244, 244, 69}, {245, 245, 70}, {249, 249, 71}, {250, 250, 72}, {251, 251, 73}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {},
            {{0, 9, 74}, {11, 65535, 74}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{105, 105, 75}, {108, 108, 76}, },
            {},
            {{44, 44, 77}, {48, 57, 17}, {69, 69, 78}, {101, 101, 79}, },
            {{61, 61, 80}, },
            {},
            {{61, 61, 81}, },
            {{61, 61, 82}, },
            {{62, 62, 83}, },
            {{65, 90, 84}, {95, 95, 85}, {97, 122, 86}, {192, 192, 87}, {193, 193, 88}, {194, 194, 89}, {195, 195, 90}, {199, 199, 91}, {200, 200, 92}, {201, 201, 93}, {202, 202, 94}, {204, 204, 95}, {205, 205, 96}, {206, 206, 97}, {210, 210, 98}, {211, 211, 99}, {212, 212, 100}, {213, 213, 101}, {217, 217, 102}, {218, 218, 103}, {219, 219, 104}, {224, 224, 105}, {225, 225, 106}, {226, 226, 107}, {227, 227, 108}, {231, 231, 109}, {232, 232, 110}, {233, 233, 111}, {234, 234, 112}, {236, 236, 113}, {237, 237, 114}, {238, 238, 115}, {242, 242, 116}, {243, 243, 117}, {244, 244, 118}, {245, 245, 119}, {249, 249, 120}, {250, 250, 121}, {251, 251, 122}, },
            {{65, 90, 123}, {95, 95, 124}, {97, 122, 125}, {192, 192, 126}, {193, 193, 127}, {194, 194, 128}, {195, 195, 129}, {199, 199, 130}, {200, 200, 131}, {201, 201, 132}, {202, 202, 133}, {204, 204, 134}, {205, 205, 135}, {206, 206, 136}, {210, 210, 137}, {211, 211, 138}, {212, 212, 139}, {213, 213, 140}, {217, 217, 141}, {218, 218, 142}, {219, 219, 143}, {224, 224, 144}, {225, 225, 145}, {226, 226, 146}, {227, 227, 147}, {231, 231, 148}, {232, 232, 149}, {233, 233, 150}, {234, 234, 151}, {236, 236, 152}, {237, 237, 153}, {238, 238, 154}, {242, 242, 155}, {243, 243, 156}, {244, 244, 157}, {245, 245, 158}, {249, 249, 159}, {250, 250, 160}, {251, 251, 161}, },
            {{65, 251, -25}, },
            {{65, 95, -25}, {97, 110, 86}, {111, 111, 162}, {112, 122, 86}, {192, 251, -25}, },
            {{65, 95, -25}, {97, 107, 86}, {108, 108, 163}, {109, 110, 86}, {111, 111, 164}, {112, 251, -28}, },
            {{65, 95, -25}, {97, 109, 86}, {110, 110, 165}, {111, 122, 86}, {192, 251, -25}, },
            {{65, 95, -25}, {97, 97, 166}, {98, 104, 86}, {105, 105, 167}, {106, 116, 86}, {117, 117, 168}, {118, 122, 86}, {192, 251, -25}, },
            {{65, 109, -30}, {110, 110, 169}, {111, 251, -30}, },
            {{65, 95, -25}, {97, 97, 86}, {98, 98, 170}, {99, 116, 86}, {117, 117, 171}, {118, 251, -31}, },
            {{65, 95, -25}, {97, 113, 86}, {114, 114, 172}, {115, 122, 86}, {192, 251, -25}, },
            {{65, 95, -25}, {97, 100, 86}, {101, 101, 173}, {102, 122, 86}, {192, 251, -25}, },
            {{65, 100, -35}, {101, 101, 174}, {102, 251, -35}, },
            {{65, 95, -25}, {97, 97, 175}, {98, 100, 86}, {101, 101, 176}, {102, 251, -35}, },
            {{0, 124, 177}, {125, 125, 178}, {126, 65535, 177}, },
            {},
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{0, 65535, -8}, },
            {{109, 109, 179}, },
            {{234, 234, 180}, },
            {{48, 57, 181}, },
            {{45, 45, 182}, },
            {{45, 45, 182}, },
            {},
            {},
            {},
            {{62, 62, 183}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 251, -26}, },
            {{65, 110, -28}, {111, 111, 184}, {112, 251, -28}, },
            {{65, 95, -25}, {97, 97, 185}, {98, 122, 86}, {192, 251, -25}, },
            {{65, 109, -30}, {110, 110, 186}, {111, 251, -30}, },
            {{65, 95, -25}, {97, 112, 86}, {113, 113, 187}, {114, 122, 86}, {192, 251, -25}, },
            {{65, 107, -29}, {108, 108, 188}, {109, 122, 86}, {192, 251, -25}, },
            {{65, 107, -29}, {108, 108, 189}, {109, 109, 190}, {110, 122, 86}, {192, 251, -25}, },
            {{65, 109, -30}, {110, 110, 191}, {111, 251, -30}, },
            {{65, 236, -25}, {237, 237, 192}, {238, 251, -25}, },
            {{65, 95, -25}, {97, 105, 86}, {106, 106, 193}, {107, 122, 86}, {192, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 110, -28}, {111, 111, 194}, {112, 251, -28}, },
            {{65, 95, -25}, {97, 97, 195}, {98, 251, -165}, },
            {{65, 109, -30}, {110, 110, 196}, {111, 251, -30}, },
            {{65, 113, -34}, {114, 114, 197}, {115, 251, -34}, },
            {{65, 113, -34}, {114, 114, 198}, {115, 251, -34}, },
            {{0, 65535, -38}, },
            {},
            {{112, 112, 199}, },
            {},
            {{48, 57, 181}, },
            {{48, 57, 200}, },
            {},
            {{65, 107, -29}, {108, 108, 201}, {109, 251, -168}, },
            {{65, 95, -25}, {97, 114, 86}, {115, 115, 202}, {116, 122, 86}, {192, 251, -25}, },
            {{65, 114, -187}, {115, 115, 203}, {116, 251, -187}, },
            {{65, 95, -25}, {97, 116, 86}, {117, 117, 204}, {118, 251, -31}, },
            {{65, 114, -187}, {115, 115, 205}, {116, 251, -187}, },
            {{65, 95, -25}, {97, 103, 86}, {104, 104, 206}, {105, 122, 86}, {192, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 227, -25}, {231, 231, 207}, {232, 251, -25}, },
            {{65, 95, -25}, {97, 98, 86}, {99, 99, 208}, {100, 122, 86}, {192, 251, -25}, },
            {{65, 100, -35}, {101, 101, 209}, {102, 251, -35}, },
            {{65, 98, -194}, {99, 99, 210}, {100, 251, -194}, },
            {{65, 107, -29}, {108, 108, 211}, {109, 251, -168}, },
            {{65, 226, -25}, {227, 227, 212}, {231, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 95, -25}, {97, 99, 86}, {100, 100, 213}, {101, 122, 86}, {192, 251, -25}, },
            {{114, 114, 214}, },
            {{48, 57, 200}, },
            {{65, 251, -25}, },
            {{65, 114, -187}, {115, 115, 215}, {116, 251, -187}, },
            {{65, 95, -25}, {97, 115, 86}, {116, 116, 216}, {117, 122, 86}, {192, 251, -25}, },
            {{65, 95, -25}, {97, 97, 217}, {98, 251, -165}, },
            {{65, 110, -28}, {111, 111, 218}, {112, 251, -28}, },
            {{65, 95, -25}, {97, 97, 219}, {98, 251, -165}, },
            {{65, 226, -25}, {227, 227, 220}, {231, 251, -25}, },
            {{65, 95, -25}, {97, 104, 86}, {105, 105, 221}, {106, 122, 86}, {192, 251, -25}, },
            {{65, 115, -205}, {116, 116, 222}, {117, 251, -205}, },
            {{65, 100, -35}, {101, 101, 223}, {102, 251, -35}, },
            {{65, 251, -25}, },
            {{65, 110, -28}, {111, 111, 224}, {112, 251, -28}, },
            {{65, 95, -25}, {97, 97, 225}, {98, 251, -165}, },
            {{105, 105, 226}, },
            {{65, 100, -35}, {101, 101, 227}, {102, 251, -35}, },
            {{65, 251, -25}, },
            {{65, 109, -30}, {110, 110, 228}, {111, 251, -30}, },
            {{65, 251, -25}, },
            {{32, 32, 229}, {65, 251, -25}, },
            {{65, 110, -28}, {111, 111, 230}, {112, 251, -28}, },
            {{65, 110, -28}, {111, 111, 231}, {112, 251, -28}, },
            {{65, 110, -28}, {111, 111, 232}, {112, 251, -28}, },
            {{65, 99, -200}, {100, 100, 233}, {101, 251, -200}, },
            {{65, 251, -25}, },
            {{65, 99, -200}, {100, 100, 234}, {101, 251, -200}, },
            {{109, 109, 235}, },
            {{65, 251, -25}, },
            {{65, 115, -205}, {116, 116, 236}, {117, 251, -205}, },
            {{100, 100, 237}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 251, -25}, },
            {{65, 104, -210}, {105, 105, 238}, {106, 251, -210}, },
            {{65, 100, -35}, {101, 101, 239}, {102, 251, -35}, },
            {{101, 101, 240}, },
            {{65, 110, -28}, {111, 111, 241}, {112, 251, -28}, },
            {{97, 97, 242}, },
            {{65, 95, -25}, {97, 108, 86}, {109, 109, 243}, {110, 251, -169}, },
            {{65, 251, -25}, },
            {},
            {{65, 251, -25}, },
            {{32, 32, 244}, },
            {{65, 100, -35}, {101, 101, 245}, {102, 251, -35}, },
            {{99, 99, 246}, },
            {{65, 109, -30}, {110, 110, 247}, {111, 251, -30}, },
            {{108, 108, 248}, },
            {{65, 115, -205}, {116, 116, 249}, {117, 251, -205}, },
            {{97, 97, 250}, },
            {{65, 110, -28}, {111, 111, 251}, {112, 251, -28}, },
            {{115, 115, 252}, },
            {{65, 251, -25}, },
            {{115, 115, 253}, },
            {{101, 101, 254}, },
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 40, 40, 40, 40, 38, 20, 34, 22, 26, 27, 32, 30, 28, 31, 29, 33, 43, -1, 23, 36, -1, -1, 41, 42, 41, 41, 41, 16, 41, 41, 41, 41, 41, 41, 41, -1, 39, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 20, -1, -1, -1, -1, -1, 24, 37, 35, -1, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 41, 41, 41, 41, 41, 41, 41, 41, 41, 17, 41, 41, 5, 41, 41, -1, 21, -1, 19, 43, -1, 25, 41, 41, 41, 41, 41, 41, 1, 41, 41, 41, 41, 41, 41, 14, 41, -1, 43, 10, 41, 41, 41, 41, 41, 41, 41, 41, 41, 11, 41, 41, -1, 41, 15, 41, 4, 41, 41, 41, 41, 41, 6, 41, -1, 2, 41, -1, 9, 0, 13, 41, 41, -1, 41, -1, 41, 3, 18, 7, -1, 41, -1, 41, -1, 41, -1, 41, -1, 8, -1, -1, 12, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
