/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.node;

import jaca.analysis.*;

@SuppressWarnings("nls")
public final class AArVarADecVar extends PADecVar
{
    private PATipoPrimitivo _aTipoPrimitivo_;
    private TId _id_;

    public AArVarADecVar()
    {
        // Constructor
    }

    public AArVarADecVar(
        @SuppressWarnings("hiding") PATipoPrimitivo _aTipoPrimitivo_,
        @SuppressWarnings("hiding") TId _id_)
    {
        // Constructor
        setATipoPrimitivo(_aTipoPrimitivo_);

        setId(_id_);

    }

    @Override
    public Object clone()
    {
        return new AArVarADecVar(
            cloneNode(this._aTipoPrimitivo_),
            cloneNode(this._id_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArVarADecVar(this);
    }

    public PATipoPrimitivo getATipoPrimitivo()
    {
        return this._aTipoPrimitivo_;
    }

    public void setATipoPrimitivo(PATipoPrimitivo node)
    {
        if(this._aTipoPrimitivo_ != null)
        {
            this._aTipoPrimitivo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._aTipoPrimitivo_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aTipoPrimitivo_)
            + toString(this._id_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aTipoPrimitivo_ == child)
        {
            this._aTipoPrimitivo_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._aTipoPrimitivo_ == oldChild)
        {
            setATipoPrimitivo((PATipoPrimitivo) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
