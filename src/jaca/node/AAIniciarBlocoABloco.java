/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.node;

import java.util.*;
import jaca.analysis.*;

@SuppressWarnings("nls")
public final class AAIniciarBlocoABloco extends PABloco
{
    private final LinkedList<PAAtributos> _aAtributos_ = new LinkedList<PAAtributos>();
    private final LinkedList<PAComando> _aComando_ = new LinkedList<PAComando>();

    public AAIniciarBlocoABloco()
    {
        // Constructor
    }

    public AAIniciarBlocoABloco(
        @SuppressWarnings("hiding") List<?> _aAtributos_,
        @SuppressWarnings("hiding") List<?> _aComando_)
    {
        // Constructor
        setAAtributos(_aAtributos_);

        setAComando(_aComando_);

    }

    @Override
    public Object clone()
    {
        return new AAIniciarBlocoABloco(
            cloneList(this._aAtributos_),
            cloneList(this._aComando_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAIniciarBlocoABloco(this);
    }

    public LinkedList<PAAtributos> getAAtributos()
    {
        return this._aAtributos_;
    }

    public void setAAtributos(List<?> list)
    {
        for(PAAtributos e : this._aAtributos_)
        {
            e.parent(null);
        }
        this._aAtributos_.clear();

        for(Object obj_e : list)
        {
            PAAtributos e = (PAAtributos) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._aAtributos_.add(e);
        }
    }

    public LinkedList<PAComando> getAComando()
    {
        return this._aComando_;
    }

    public void setAComando(List<?> list)
    {
        for(PAComando e : this._aComando_)
        {
            e.parent(null);
        }
        this._aComando_.clear();

        for(Object obj_e : list)
        {
            PAComando e = (PAComando) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._aComando_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._aAtributos_)
            + toString(this._aComando_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._aAtributos_.remove(child))
        {
            return;
        }

        if(this._aComando_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PAAtributos> i = this._aAtributos_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PAAtributos) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        for(ListIterator<PAComando> i = this._aComando_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PAComando) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
