/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.analysis;

import jaca.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAAPrograma(AAPrograma node);
    void caseAANotEmptyAFamilia(AANotEmptyAFamilia node);
    void caseAARelacoesAListaRelacoes(AARelacoesAListaRelacoes node);
    void caseAARelARelacao(AARelARelacao node);
    void caseAADefiniADefClasse(AADefiniADefClasse node);
    void caseAAProcFuncAMetodos(AAProcFuncAMetodos node);
    void caseAADecProcedimentoAProcFunc(AADecProcedimentoAProcFunc node);
    void caseAADecFuncaoAProcFunc(AADecFuncaoAProcFunc node);
    void caseAAObjADecObj(AAObjADecObj node);
    void caseAAObjReservadoADecObj(AAObjReservadoADecObj node);
    void caseAAVarADecVar(AAVarADecVar node);
    void caseAAConstADecConst(AAConstADecConst node);
    void caseAAInitAInicializacao(AAInitAInicializacao node);
    void caseAATipoClasseATipo(AATipoClasseATipo node);
    void caseAATipoPrimitivoATipo(AATipoPrimitivoATipo node);
    void caseAAClasseATipoClasse(AAClasseATipoClasse node);
    void caseAARealATipoPrimitivo(AARealATipoPrimitivo node);
    void caseAABoolATipoPrimitivo(AABoolATipoPrimitivo node);
    void caseAAProcedCompletoADecProcedimento(AAProcedCompletoADecProcedimento node);
    void caseAAProcedimentoADecProcedimento(AAProcedimentoADecProcedimento node);
    void caseAAFuncaoCompletaADecFuncao(AAFuncaoCompletaADecFuncao node);
    void caseAAFuncaoADecFuncao(AAFuncaoADecFuncao node);
    void caseAAParamsAParametros(AAParamsAParametros node);
    void caseAAListaAParams(AAListaAParams node);
    void caseAAParamAParametro(AAParamAParametro node);
    void caseAASeAComando(AASeAComando node);
    void caseAASeSenaoAComando(AASeSenaoAComando node);
    void caseAAEnquantoAComando(AAEnquantoAComando node);
    void caseAAAtbrAComando(AAAtbrAComando node);
    void caseAAChamadaMetdAComando(AAChamadaMetdAComando node);
    void caseAABlocoAComando(AABlocoAComando node);
    void caseAASeSenaoAComandoDois(AASeSenaoAComandoDois node);
    void caseAABlocoAComandoDois(AABlocoAComandoDois node);
    void caseAAIniciarBlocoABloco(AAIniciarBlocoABloco node);
    void caseAADecObjAAtributos(AADecObjAAtributos node);
    void caseAADecVarAAtributos(AADecVarAAtributos node);
    void caseAADecConstAAtributos(AADecConstAAtributos node);
    void caseAAExprAExprInversora(AAExprAExprInversora node);
    void caseAAInversorAExprInversora(AAInversorAExprInversora node);
    void caseAAIdentifierAExpr(AAIdentifierAExpr node);
    void caseAANRealAExpr(AANRealAExpr node);
    void caseAAVerdadeAExpr(AAVerdadeAExpr node);
    void caseAAFalsoAExpr(AAFalsoAExpr node);
    void caseAAChamadaAtributoAExpr(AAChamadaAtributoAExpr node);
    void caseAAChamadaMetdAExpr(AAChamadaMetdAExpr node);
    void caseAASomaAExpr(AASomaAExpr node);
    void caseAAMenosAExpr(AAMenosAExpr node);
    void caseAAMultAExpr(AAMultAExpr node);
    void caseAADivAExpr(AADivAExpr node);
    void caseAAModAExpr(AAModAExpr node);
    void caseAAIgualAExpr(AAIgualAExpr node);
    void caseAAELogicoAExpr(AAELogicoAExpr node);
    void caseAAOuLogicoAExpr(AAOuLogicoAExpr node);
    void caseAAMenorAExpr(AAMenorAExpr node);
    void caseAAMenorIgualAExpr(AAMenorIgualAExpr node);
    void caseAABlocoExpAExpr(AABlocoExpAExpr node);
    void caseAABlocoABlocoExp(AABlocoABlocoExp node);
    void caseAAChamadaMetodoAChamada(AAChamadaMetodoAChamada node);
    void caseAAReservadoLeAChamada(AAReservadoLeAChamada node);
    void caseAAReservadoImprimeAChamada(AAReservadoImprimeAChamada node);
    void caseAAIdAAtributo(AAIdAAtributo node);
    void caseAAExpressoesAListaExpr(AAExpressoesAListaExpr node);
    void caseAAListaAExprs(AAListaAExprs node);

    void caseTInicio(TInicio node);
    void caseTFim(TFim node);
    void caseTClasse(TClasse node);
    void caseTVerdade(TVerdade node);
    void caseTFalso(TFalso node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEnquanto(TEnquanto node);
    void caseTProcedimento(TProcedimento node);
    void caseTFuncao(TFuncao node);
    void caseTTipoBool(TTipoBool node);
    void caseTTipoReal(TTipoReal node);
    void caseTHeranca(THeranca node);
    void caseTObjeto(TObjeto node);
    void caseTVariavel(TVariavel node);
    void caseTConstante(TConstante node);
    void caseTELogico(TELogico node);
    void caseTOuLogico(TOuLogico node);
    void caseTClasseReservada(TClasseReservada node);
    void caseTMetodoImprime(TMetodoImprime node);
    void caseTMetodoLe(TMetodoLe node);
    void caseTComentario(TComentario node);
    void caseTComentarioBloco(TComentarioBloco node);
    void caseTRelacaoSymbol(TRelacaoSymbol node);
    void caseTPontoVirgula(TPontoVirgula node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTInicioProced(TInicioProced node);
    void caseTParEsq(TParEsq node);
    void caseTParDir(TParDir node);
    void caseTVirgula(TVirgula node);
    void caseTPonto(TPonto node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTIgual(TIgual node);
    void caseTMenor(TMenor node);
    void caseTMenorIgual(TMenorIgual node);
    void caseTNegacao(TNegacao node);
    void caseTBarra(TBarra node);
    void caseTVazio(TVazio node);
    void caseTId(TId node);
    void caseTIdClass(TIdClass node);
    void caseTNumeroReal(TNumeroReal node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
