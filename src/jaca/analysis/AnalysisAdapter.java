/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.analysis;

import java.util.*;
import jaca.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPrograma(AAPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANotEmptyAFamilia(AANotEmptyAFamilia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAARelacoesAListaRelacoes(AARelacoesAListaRelacoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAARelARelacao(AARelARelacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADefiniADefClasse(AADefiniADefClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProcFuncAMetodos(AAProcFuncAMetodos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecProcedimentoAProcFunc(AADecProcedimentoAProcFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecFuncaoAProcFunc(AADecFuncaoAProcFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAObjADecObj(AAObjADecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAObjReservadoADecObj(AAObjReservadoADecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVarADecVar(AAVarADecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAConstADecConst(AAConstADecConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAInitAInicializacao(AAInitAInicializacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATipoClasseATipo(AATipoClasseATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAATipoPrimitivoATipo(AATipoPrimitivoATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAClasseATipoClasse(AAClasseATipoClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAARealATipoPrimitivo(AARealATipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABoolATipoPrimitivo(AABoolATipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProcedCompletoADecProcedimento(AAProcedCompletoADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAProcedimentoADecProcedimento(AAProcedimentoADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAFuncaoCompletaADecFuncao(AAFuncaoCompletaADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAFuncaoADecFuncao(AAFuncaoADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAParamsAParametros(AAParamsAParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAListaAParams(AAListaAParams node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAParamAParametro(AAParamAParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASeAComando(AASeAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASeSenaoAComando(AASeSenaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAEnquantoAComando(AAEnquantoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAAtbrAComando(AAAtbrAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAChamadaMetdAComando(AAChamadaMetdAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoAComando(AABlocoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASeSenaoAComandoDois(AASeSenaoAComandoDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoAComandoDois(AABlocoAComandoDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIniciarBlocoABloco(AAIniciarBlocoABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecObjAAtributos(AADecObjAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecVarAAtributos(AADecVarAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADecConstAAtributos(AADecConstAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExprAExprInversora(AAExprAExprInversora node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAInversorAExprInversora(AAInversorAExprInversora node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdentifierAExpr(AAIdentifierAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAANRealAExpr(AANRealAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAVerdadeAExpr(AAVerdadeAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAFalsoAExpr(AAFalsoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAChamadaAtributoAExpr(AAChamadaAtributoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAChamadaMetdAExpr(AAChamadaMetdAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAASomaAExpr(AASomaAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMenosAExpr(AAMenosAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMultAExpr(AAMultAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAADivAExpr(AADivAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAModAExpr(AAModAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIgualAExpr(AAIgualAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAELogicoAExpr(AAELogicoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAOuLogicoAExpr(AAOuLogicoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMenorAExpr(AAMenorAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAMenorIgualAExpr(AAMenorIgualAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoExpAExpr(AABlocoExpAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAABlocoABlocoExp(AABlocoABlocoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAChamadaMetodoAChamada(AAChamadaMetodoAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAReservadoLeAChamada(AAReservadoLeAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAReservadoImprimeAChamada(AAReservadoImprimeAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAIdAAtributo(AAIdAAtributo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAExpressoesAListaExpr(AAExpressoesAListaExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAListaAExprs(AAListaAExprs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasse(TClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdade(TVerdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedimento(TProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFuncao(TFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoBool(TTipoBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoReal(TTipoReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHeranca(THeranca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTObjeto(TObjeto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVariavel(TVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTELogico(TELogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOuLogico(TOuLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasseReservada(TClasseReservada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMetodoImprime(TMetodoImprime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMetodoLe(TMetodoLe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioBloco(TComentarioBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRelacaoSymbol(TRelacaoSymbol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicioProced(TInicioProced node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNegacao(TNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdClass(TIdClass node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroReal(TNumeroReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
