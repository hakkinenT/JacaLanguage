/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.analysis;

import java.util.*;
import jaca.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAPrograma(AAPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArNotEmptyAFamilia(AArNotEmptyAFamilia node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArRelacoesAListaRelacoes(AArRelacoesAListaRelacoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArRelARelacao(AArRelARelacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDefiniADefClasse(AArDefiniADefClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArProcFuncAMetodos(AArProcFuncAMetodos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecProcedimentoAProcFunc(AArDecProcedimentoAProcFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecFuncaoAProcFunc(AArDecFuncaoAProcFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArObjADecObj(AArObjADecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArObjReservadoADecObj(AArObjReservadoADecObj node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArVarADecVar(AArVarADecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArConstADecConst(AArConstADecConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArInitAInicializacao(AArInitAInicializacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoClasseATipo(AArTipoClasseATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArTipoPrimitivoATipo(AArTipoPrimitivoATipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArClasseATipoClasse(AArClasseATipoClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArRealATipoPrimitivo(AArRealATipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBoolATipoPrimitivo(AArBoolATipoPrimitivo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArProcedCompletoADecProcedimento(AArProcedCompletoADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArProcedimentoADecProcedimento(AArProcedimentoADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArFuncaoCompletaADecFuncao(AArFuncaoCompletaADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArFuncaoADecFuncao(AArFuncaoADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParamsAParametros(AArParamsAParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaAParams(AArListaAParams node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArParamAParametro(AArParamAParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSeAComando(AArSeAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSeSenaoAComando(AArSeSenaoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArEnquantoAComando(AArEnquantoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArAtbrAComando(AArAtbrAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaMetdAComando(AArChamadaMetdAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoAComando(AArBlocoAComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSeSenaoAComandoDois(AArSeSenaoAComandoDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoAComandoDois(AArBlocoAComandoDois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIniciarBlocoABloco(AArIniciarBlocoABloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecObjAAtributos(AArDecObjAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecVarAAtributos(AArDecVarAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDecConstAAtributos(AArDecConstAAtributos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArExprAExprIni(AArExprAExprIni node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArInversorAExprIni(AArInversorAExprIni node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIdentifierAExpr(AArIdentifierAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArNRealAExpr(AArNRealAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArVerdadeAExpr(AArVerdadeAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArFalsoAExpr(AArFalsoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaAtributoAExpr(AArChamadaAtributoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaMetdAExpr(AArChamadaMetdAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArSomaAExpr(AArSomaAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenosAExpr(AArMenosAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMultAExpr(AArMultAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArDivAExpr(AArDivAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArModAExpr(AArModAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIgualAExpr(AArIgualAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArELogicoAExpr(AArELogicoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArOuLogicoAExpr(AArOuLogicoAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenorAExpr(AArMenorAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArMenorIgualAExpr(AArMenorIgualAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoExpAExpr(AArBlocoExpAExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArBlocoABlocoExp(AArBlocoABlocoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArChamadaMetodoAChamada(AArChamadaMetodoAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArReservadoLeAChamada(AArReservadoLeAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArReservadoImprimeAChamada(AArReservadoImprimeAChamada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArIdAAtributo(AArIdAAtributo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArExpressoesAListaExpr(AArExpressoesAListaExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArListaAExprs(AArListaAExprs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicio(TInicio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFim(TFim node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasse(TClasse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdade(TVerdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedimento(TProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFuncao(TFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoBool(TTipoBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoReal(TTipoReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTHeranca(THeranca node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTObjeto(TObjeto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVariavel(TVariavel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConstante(TConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTELogico(TELogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOuLogico(TOuLogico node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClasseReservada(TClasseReservada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMetodoImprime(TMetodoImprime node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMetodoLe(TMetodoLe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioBloco(TComentarioBloco node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRelacaoSymbol(TRelacaoSymbol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoVirgula(TPontoVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInicioProced(TInicioProced node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVirgula(TVirgula node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPonto(TPonto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgual(TIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenor(TMenor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenorIgual(TMenorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNegacao(TNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBarra(TBarra node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdClass(TIdClass node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumeroReal(TNumeroReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
