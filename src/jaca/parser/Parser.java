/* This file was generated by SableCC (http://www.sablecc.org/). */

package jaca.parser;

import jaca.lexer.*;
import jaca.node.*;
import jaca.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AAprograma1Programa */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AAprograma2Programa */
            {
                ArrayList<Object> list = new1();
                push(goTo(0), list, false);
            }
            break;
            case 2: /* reduce AAfamilia1Familia */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AAfamilia2Familia */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list, false);
            }
            break;
            case 4: /* reduce ARelacoesListaRelacoes */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce ARelacao */
            {
                ArrayList<Object> list = new5();
                push(goTo(3), list, false);
            }
            break;
            case 6: /* reduce ADefClasse */
            {
                ArrayList<Object> list = new6();
                push(goTo(4), list, false);
            }
            break;
            case 7: /* reduce ADecObjAtributos */
            {
                ArrayList<Object> list = new7();
                push(goTo(5), list, false);
            }
            break;
            case 8: /* reduce ADecVarAtributos */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce ADecConstAtributos */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce ADecProcedimentoMetodos */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce ADecFuncaoMetodos */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce AObjDecObj */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce AVarDecVar */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce AConstDecConst */
            {
                ArrayList<Object> list = new14();
                push(goTo(9), list, false);
            }
            break;
            case 15: /* reduce AInitInicializacao */
            {
                ArrayList<Object> list = new15();
                push(goTo(10), list, false);
            }
            break;
            case 16: /* reduce ATipoClasseTipo */
            {
                ArrayList<Object> list = new16();
                push(goTo(11), list, false);
            }
            break;
            case 17: /* reduce ATipoPrimitivoTipo */
            {
                ArrayList<Object> list = new17();
                push(goTo(11), list, false);
            }
            break;
            case 18: /* reduce AClasseTipoClasse */
            {
                ArrayList<Object> list = new18();
                push(goTo(12), list, false);
            }
            break;
            case 19: /* reduce ARealTipoPrimitivo */
            {
                ArrayList<Object> list = new19();
                push(goTo(13), list, false);
            }
            break;
            case 20: /* reduce ABoolTipoPrimitivo */
            {
                ArrayList<Object> list = new20();
                push(goTo(13), list, false);
            }
            break;
            case 21: /* reduce APrincipalDecProcedimento */
            {
                ArrayList<Object> list = new21();
                push(goTo(14), list, false);
            }
            break;
            case 22: /* reduce AProcedimentoDecProcedimento */
            {
                ArrayList<Object> list = new22();
                push(goTo(14), list, false);
            }
            break;
            case 23: /* reduce AFuncaoCompletaDecFuncao */
            {
                ArrayList<Object> list = new23();
                push(goTo(15), list, false);
            }
            break;
            case 24: /* reduce AFuncaoDecFuncao */
            {
                ArrayList<Object> list = new24();
                push(goTo(15), list, false);
            }
            break;
            case 25: /* reduce AAparamsparametros1Parametros */
            {
                ArrayList<Object> list = new25();
                push(goTo(16), list, false);
            }
            break;
            case 26: /* reduce AAparamsparametros2Parametros */
            {
                ArrayList<Object> list = new26();
                push(goTo(16), list, false);
            }
            break;
            case 27: /* reduce AListaListParam */
            {
                ArrayList<Object> list = new27();
                push(goTo(17), list, false);
            }
            break;
            case 28: /* reduce AParamParametro */
            {
                ArrayList<Object> list = new28();
                push(goTo(18), list, false);
            }
            break;
            case 29: /* reduce ASeComando */
            {
                ArrayList<Object> list = new29();
                push(goTo(19), list, false);
            }
            break;
            case 30: /* reduce AEquantoComando */
            {
                ArrayList<Object> list = new30();
                push(goTo(19), list, false);
            }
            break;
            case 31: /* reduce AAtbrComando */
            {
                ArrayList<Object> list = new31();
                push(goTo(19), list, false);
            }
            break;
            case 32: /* reduce AChamadaMetdComando */
            {
                ArrayList<Object> list = new32();
                push(goTo(19), list, false);
            }
            break;
            case 33: /* reduce ABlocoComando */
            {
                ArrayList<Object> list = new33();
                push(goTo(19), list, false);
            }
            break;
            case 34: /* reduce AAiniciarblocobloco1Bloco */
            {
                ArrayList<Object> list = new34();
                push(goTo(20), list, false);
            }
            break;
            case 35: /* reduce AAiniciarblocobloco2Bloco */
            {
                ArrayList<Object> list = new35();
                push(goTo(20), list, false);
            }
            break;
            case 36: /* reduce AAiniciarblocobloco3Bloco */
            {
                ArrayList<Object> list = new36();
                push(goTo(20), list, false);
            }
            break;
            case 37: /* reduce AAiniciarblocobloco4Bloco */
            {
                ArrayList<Object> list = new37();
                push(goTo(20), list, false);
            }
            break;
            case 38: /* reduce ADecObjTipoDecl */
            {
                ArrayList<Object> list = new38();
                push(goTo(21), list, false);
            }
            break;
            case 39: /* reduce ADecVarTipoDecl */
            {
                ArrayList<Object> list = new39();
                push(goTo(21), list, false);
            }
            break;
            case 40: /* reduce ADecConstTipoDecl */
            {
                ArrayList<Object> list = new40();
                push(goTo(21), list, false);
            }
            break;
            case 41: /* reduce AFatorExpr */
            {
                ArrayList<Object> list = new41();
                push(goTo(22), list, false);
            }
            break;
            case 42: /* reduce ASomaExpr */
            {
                ArrayList<Object> list = new42();
                push(goTo(22), list, false);
            }
            break;
            case 43: /* reduce AMenosExpr */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list, false);
            }
            break;
            case 44: /* reduce ATermoFator */
            {
                ArrayList<Object> list = new44();
                push(goTo(23), list, false);
            }
            break;
            case 45: /* reduce AMultFator */
            {
                ArrayList<Object> list = new45();
                push(goTo(23), list, false);
            }
            break;
            case 46: /* reduce ADivFator */
            {
                ArrayList<Object> list = new46();
                push(goTo(23), list, false);
            }
            break;
            case 47: /* reduce AModFator */
            {
                ArrayList<Object> list = new47();
                push(goTo(23), list, false);
            }
            break;
            case 48: /* reduce ANumeroTermo */
            {
                ArrayList<Object> list = new48();
                push(goTo(24), list, false);
            }
            break;
            case 49: /* reduce AParTermo */
            {
                ArrayList<Object> list = new49();
                push(goTo(24), list, false);
            }
            break;
            case 50: /* reduce AAblocoblocoexp1BlocoExp */
            {
                ArrayList<Object> list = new50();
                push(goTo(25), list, false);
            }
            break;
            case 51: /* reduce AAblocoblocoexp2BlocoExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(25), list, false);
            }
            break;
            case 52: /* reduce AChamadaMetodoChamada */
            {
                ArrayList<Object> list = new52();
                push(goTo(26), list, false);
            }
            break;
            case 53: /* reduce AIdAtributo */
            {
                ArrayList<Object> list = new53();
                push(goTo(27), list, false);
            }
            break;
            case 54: /* reduce AAexpressoeslistaexpr1ListaExpr */
            {
                ArrayList<Object> list = new54();
                push(goTo(28), list, false);
            }
            break;
            case 55: /* reduce AAexpressoeslistaexpr2ListaExpr */
            {
                ArrayList<Object> list = new55();
                push(goTo(28), list, false);
            }
            break;
            case 56: /* reduce AListaExprs */
            {
                ArrayList<Object> list = new56();
                push(goTo(29), list, false);
            }
            break;
            case 57: /* reduce ATerminal$DefClasse */
            {
                ArrayList<Object> list = new57();
                push(goTo(30), list, true);
            }
            break;
            case 58: /* reduce ANonTerminal$DefClasse */
            {
                ArrayList<Object> list = new58();
                push(goTo(30), list, true);
            }
            break;
            case 59: /* reduce ATerminal$ListaRelacoes */
            {
                ArrayList<Object> list = new59();
                push(goTo(31), list, true);
            }
            break;
            case 60: /* reduce ANonTerminal$ListaRelacoes */
            {
                ArrayList<Object> list = new60();
                push(goTo(31), list, true);
            }
            break;
            case 61: /* reduce ATerminal$Parametro */
            {
                ArrayList<Object> list = new61();
                push(goTo(32), list, true);
            }
            break;
            case 62: /* reduce ANonTerminal$Parametro */
            {
                ArrayList<Object> list = new62();
                push(goTo(32), list, true);
            }
            break;
            case 63: /* reduce ATerminal$TipoDecl */
            {
                ArrayList<Object> list = new63();
                push(goTo(33), list, true);
            }
            break;
            case 64: /* reduce ANonTerminal$TipoDecl */
            {
                ArrayList<Object> list = new64();
                push(goTo(33), list, true);
            }
            break;
            case 65: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new65();
                push(goTo(34), list, true);
            }
            break;
            case 66: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new66();
                push(goTo(34), list, true);
            }
            break;
            case 67: /* reduce ATerminal$DecConst */
            {
                ArrayList<Object> list = new67();
                push(goTo(35), list, true);
            }
            break;
            case 68: /* reduce ANonTerminal$DecConst */
            {
                ArrayList<Object> list = new68();
                push(goTo(35), list, true);
            }
            break;
            case 69: /* reduce ATerminal$Exprs */
            {
                ArrayList<Object> list = new69();
                push(goTo(36), list, true);
            }
            break;
            case 70: /* reduce ANonTerminal$Exprs */
            {
                ArrayList<Object> list = new70();
                push(goTo(36), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AAprograma1Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PFamilia pfamiliaNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pfamiliaNode2 = (PFamilia)nodeArrayList1.get(0);
        {
            // Block
        }

        pprogramaNode1 = new APrograma(pfamiliaNode2, listNode3);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AAprograma2Programa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PFamilia pfamiliaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pfamiliaNode2 = (PFamilia)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new APrograma(pfamiliaNode2, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AAfamilia1Familia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFamilia pfamiliaNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode4;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);
        {
            // Block
        }
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList2.get(0);

        pfamiliaNode1 = new AFamilia(prelacaoNode2, listNode3, tpontovirgulaNode4);
        }
	nodeList.add(pfamiliaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAfamilia2Familia */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFamilia pfamiliaNode1;
        {
            // Block
        PRelacao prelacaoNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TPontoVirgula tpontovirgulaNode5;
        prelacaoNode2 = (PRelacao)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList3.get(0);

        pfamiliaNode1 = new AFamilia(prelacaoNode2, listNode4, tpontovirgulaNode5);
        }
	nodeList.add(pfamiliaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ARelacoesListaRelacoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaRelacoes plistarelacoesNode1;
        {
            // Block
        TRelacaoSymbol trelacaosymbolNode2;
        PRelacao prelacaoNode3;
        trelacaosymbolNode2 = (TRelacaoSymbol)nodeArrayList1.get(0);
        prelacaoNode3 = (PRelacao)nodeArrayList2.get(0);

        plistarelacoesNode1 = new ARelacoesListaRelacoes(trelacaosymbolNode2, prelacaoNode3);
        }
	nodeList.add(plistarelacoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ARelacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PRelacao prelacaoNode1;
        {
            // Block
        TClasse tclasseNode2;
        TIdClass tidclassNode3;
        THeranca therancaNode4;
        TIdClass tidclassNode5;
        tclasseNode2 = (TClasse)nodeArrayList1.get(0);
        tidclassNode3 = (TIdClass)nodeArrayList2.get(0);
        therancaNode4 = (THeranca)nodeArrayList3.get(0);
        tidclassNode5 = (TIdClass)nodeArrayList4.get(0);

        prelacaoNode1 = new ARelacao(tclasseNode2, tidclassNode3, therancaNode4, tidclassNode5);
        }
	nodeList.add(prelacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADefClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDefClasse pdefclasseNode1;
        {
            // Block
        TClasse tclasseNode2;
        TIdClass tidclassNode3;
        TInicio tinicioNode4;
        PAtributos patributosNode5;
        PMetodos pmetodosNode6;
        TFim tfimNode7;
        tclasseNode2 = (TClasse)nodeArrayList1.get(0);
        tidclassNode3 = (TIdClass)nodeArrayList2.get(0);
        tinicioNode4 = (TInicio)nodeArrayList3.get(0);
        patributosNode5 = (PAtributos)nodeArrayList4.get(0);
        pmetodosNode6 = (PMetodos)nodeArrayList5.get(0);
        tfimNode7 = (TFim)nodeArrayList6.get(0);

        pdefclasseNode1 = new ADefClasse(tclasseNode2, tidclassNode3, tinicioNode4, patributosNode5, pmetodosNode6, tfimNode7);
        }
	nodeList.add(pdefclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADecObjAtributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributos patributosNode1;
        {
            // Block
        PDecObj pdecobjNode2;
        pdecobjNode2 = (PDecObj)nodeArrayList1.get(0);

        patributosNode1 = new ADecObjAtributos(pdecobjNode2);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce ADecVarAtributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributos patributosNode1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        patributosNode1 = new ADecVarAtributos(pdecvarNode2);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce ADecConstAtributos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributos patributosNode1;
        {
            // Block
        PDecConst pdecconstNode2;
        pdecconstNode2 = (PDecConst)nodeArrayList1.get(0);

        patributosNode1 = new ADecConstAtributos(pdecconstNode2);
        }
	nodeList.add(patributosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ADecProcedimentoMetodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMetodos pmetodosNode1;
        {
            // Block
        PDecProcedimento pdecprocedimentoNode2;
        pdecprocedimentoNode2 = (PDecProcedimento)nodeArrayList1.get(0);

        pmetodosNode1 = new ADecProcedimentoMetodos(pdecprocedimentoNode2);
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ADecFuncaoMetodos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMetodos pmetodosNode1;
        {
            // Block
        PDecFuncao pdecfuncaoNode2;
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList1.get(0);

        pmetodosNode1 = new ADecFuncaoMetodos(pdecfuncaoNode2);
        }
	nodeList.add(pmetodosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AObjDecObj */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecObj pdecobjNode1;
        {
            // Block
        TObjeto tobjetoNode2;
        PTipoClasse ptipoclasseNode3;
        TId tidNode4;
        TPontoVirgula tpontovirgulaNode5;
        tobjetoNode2 = (TObjeto)nodeArrayList1.get(0);
        ptipoclasseNode3 = (PTipoClasse)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecobjNode1 = new AObjDecObj(tobjetoNode2, ptipoclasseNode3, tidNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecobjNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AVarDecVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVar pdecvarNode1;
        {
            // Block
        TVariavel tvariavelNode2;
        PTipoPrimitivo ptipoprimitivoNode3;
        TId tidNode4;
        TPontoVirgula tpontovirgulaNode5;
        tvariavelNode2 = (TVariavel)nodeArrayList1.get(0);
        ptipoprimitivoNode3 = (PTipoPrimitivo)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecvarNode1 = new AVarDecVar(tvariavelNode2, ptipoprimitivoNode3, tidNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AConstDecConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecConst pdecconstNode1;
        {
            // Block
        TConstante tconstanteNode2;
        PTipoPrimitivo ptipoprimitivoNode3;
        PInicializacao pinicializacaoNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        ptipoprimitivoNode3 = (PTipoPrimitivo)nodeArrayList2.get(0);
        pinicializacaoNode4 = (PInicializacao)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdecconstNode1 = new AConstDecConst(tconstanteNode2, ptipoprimitivoNode3, pinicializacaoNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdecconstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AInitInicializacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInicializacao pinicializacaoNode1;
        {
            // Block
        TId tidNode2;
        TAtribuicao tatribuicaoNode3;
        PExpr pexprNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);

        pinicializacaoNode1 = new AInitInicializacao(tidNode2, tatribuicaoNode3, pexprNode4);
        }
	nodeList.add(pinicializacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ATipoClasseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoClasse ptipoclasseNode2;
        ptipoclasseNode2 = (PTipoClasse)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoClasseTipo(ptipoclasseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ATipoPrimitivoTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipoPrimitivo ptipoprimitivoNode2;
        ptipoprimitivoNode2 = (PTipoPrimitivo)nodeArrayList1.get(0);

        ptipoNode1 = new ATipoPrimitivoTipo(ptipoprimitivoNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AClasseTipoClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoClasse ptipoclasseNode1;
        {
            // Block
        TIdClass tidclassNode2;
        tidclassNode2 = (TIdClass)nodeArrayList1.get(0);

        ptipoclasseNode1 = new AClasseTipoClasse(tidclassNode2);
        }
	nodeList.add(ptipoclasseNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce ARealTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TTipoReal ttiporealNode2;
        ttiporealNode2 = (TTipoReal)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ARealTipoPrimitivo(ttiporealNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ABoolTipoPrimitivo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoPrimitivo ptipoprimitivoNode1;
        {
            // Block
        TTipoBool ttipoboolNode2;
        ttipoboolNode2 = (TTipoBool)nodeArrayList1.get(0);

        ptipoprimitivoNode1 = new ABoolTipoPrimitivo(ttipoboolNode2);
        }
	nodeList.add(ptipoprimitivoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce APrincipalDecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        TInicioProced tinicioprocedNode2;
        TProcedimento tprocedimentoNode3;
        TId tidNode4;
        TParEsq tparesqNode5;
        PParametros pparametrosNode6;
        TParDir tpardirNode7;
        PComando pcomandoNode8;
        tinicioprocedNode2 = (TInicioProced)nodeArrayList1.get(0);
        tprocedimentoNode3 = (TProcedimento)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tparesqNode5 = (TParEsq)nodeArrayList4.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList5.get(0);
        tpardirNode7 = (TParDir)nodeArrayList6.get(0);
        pcomandoNode8 = (PComando)nodeArrayList7.get(0);

        pdecprocedimentoNode1 = new APrincipalDecProcedimento(tinicioprocedNode2, tprocedimentoNode3, tidNode4, tparesqNode5, pparametrosNode6, tpardirNode7, pcomandoNode8);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AProcedimentoDecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        TProcedimento tprocedimentoNode2;
        TId tidNode3;
        TParEsq tparesqNode4;
        PParametros pparametrosNode5;
        TParDir tpardirNode6;
        TPontoVirgula tpontovirgulaNode7;
        tprocedimentoNode2 = (TProcedimento)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);
        tparesqNode4 = (TParEsq)nodeArrayList3.get(0);
        pparametrosNode5 = (PParametros)nodeArrayList4.get(0);
        tpardirNode6 = (TParDir)nodeArrayList5.get(0);
        tpontovirgulaNode7 = (TPontoVirgula)nodeArrayList6.get(0);

        pdecprocedimentoNode1 = new AProcedimentoDecProcedimento(tprocedimentoNode2, tidNode3, tparesqNode4, pparametrosNode5, tpardirNode6, tpontovirgulaNode7);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AFuncaoCompletaDecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TFuncao tfuncaoNode2;
        PTipo ptipoNode3;
        TId tidNode4;
        TParEsq tparesqNode5;
        PParametros pparametrosNode6;
        TParDir tpardirNode7;
        PExpr pexprNode8;
        tfuncaoNode2 = (TFuncao)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tparesqNode5 = (TParEsq)nodeArrayList4.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList5.get(0);
        tpardirNode7 = (TParDir)nodeArrayList6.get(0);
        pexprNode8 = (PExpr)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new AFuncaoCompletaDecFuncao(tfuncaoNode2, ptipoNode3, tidNode4, tparesqNode5, pparametrosNode6, tpardirNode7, pexprNode8);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AFuncaoDecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TFuncao tfuncaoNode2;
        PTipo ptipoNode3;
        TId tidNode4;
        TParEsq tparesqNode5;
        PParametros pparametrosNode6;
        TParDir tpardirNode7;
        TPontoVirgula tpontovirgulaNode8;
        tfuncaoNode2 = (TFuncao)nodeArrayList1.get(0);
        ptipoNode3 = (PTipo)nodeArrayList2.get(0);
        tidNode4 = (TId)nodeArrayList3.get(0);
        tparesqNode5 = (TParEsq)nodeArrayList4.get(0);
        pparametrosNode6 = (PParametros)nodeArrayList5.get(0);
        tpardirNode7 = (TParDir)nodeArrayList6.get(0);
        tpontovirgulaNode8 = (TPontoVirgula)nodeArrayList7.get(0);

        pdecfuncaoNode1 = new AFuncaoDecFuncao(tfuncaoNode2, ptipoNode3, tidNode4, tparesqNode5, pparametrosNode6, tpardirNode7, tpontovirgulaNode8);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AAparamsparametros1Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        }

        pparametrosNode1 = new AParamsParametros(listNode2);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AAparamsparametros2Parametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }

        pparametrosNode1 = new AParamsParametros(listNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AListaListParam */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListParam plistparamNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PParametro pparametroNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pparametroNode3 = (PParametro)nodeArrayList2.get(0);

        plistparamNode1 = new AListaListParam(tvirgulaNode2, pparametroNode3);
        }
	nodeList.add(plistparamNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AParamParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipo ptipoNode2;
        TId tidNode3;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tidNode3 = (TId)nodeArrayList2.get(0);

        pparametroNode1 = new AParamParametro(ptipoNode2, tidNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ASeComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExpr pexprNode4;
        TParDir tpardirNode5;
        PComando pcomandoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pcomandoNode6 = (PComando)nodeArrayList5.get(0);

        pcomandoNode1 = new ASeComando(tseNode2, tparesqNode3, pexprNode4, tpardirNode5, pcomandoNode6);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AEquantoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExpr pexprNode3;
        TParDir tpardirNode4;
        PComando pcomandoNode5;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);
        pcomandoNode5 = (PComando)nodeArrayList4.get(0);

        pcomandoNode1 = new AEquantoComando(tparesqNode2, pexprNode3, tpardirNode4, pcomandoNode5);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AAtbrComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TId tidNode2;
        TAtribuicao tatribuicaoNode3;
        PExpr pexprNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexprNode4 = (PExpr)nodeArrayList3.get(0);

        pcomandoNode1 = new AAtbrComando(tidNode2, tatribuicaoNode3, pexprNode4);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AChamadaMetdComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        TId tidNode2;
        TPonto tpontoNode3;
        PChamada pchamadaNode4;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tpontoNode3 = (TPonto)nodeArrayList2.get(0);
        pchamadaNode4 = (PChamada)nodeArrayList3.get(0);

        pcomandoNode1 = new AChamadaMetdComando(tidNode2, tpontoNode3, pchamadaNode4);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ABlocoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PBloco pblocoNode2;
        pblocoNode2 = (PBloco)nodeArrayList1.get(0);

        pcomandoNode1 = new ABlocoComando(pblocoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAiniciarblocobloco1Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TFim tfimNode5;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        tfimNode5 = (TFim)nodeArrayList2.get(0);

        pblocoNode1 = new AIniciarBlocoBloco(tinicioNode2, listNode3, listNode4, tfimNode5);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AAiniciarblocobloco2Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFim tfimNode6;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        tfimNode6 = (TFim)nodeArrayList3.get(0);

        pblocoNode1 = new AIniciarBlocoBloco(tinicioNode2, listNode4, listNode5, tfimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AAiniciarblocobloco3Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TFim tfimNode6;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tfimNode6 = (TFim)nodeArrayList3.get(0);

        pblocoNode1 = new AIniciarBlocoBloco(tinicioNode2, listNode3, listNode5, tfimNode6);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAiniciarblocobloco4Bloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBloco pblocoNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TFim tfimNode7;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        tfimNode7 = (TFim)nodeArrayList4.get(0);

        pblocoNode1 = new AIniciarBlocoBloco(tinicioNode2, listNode4, listNode6, tfimNode7);
        }
	nodeList.add(pblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce ADecObjTipoDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoDecl ptipodeclNode1;
        {
            // Block
        PDecObj pdecobjNode2;
        pdecobjNode2 = (PDecObj)nodeArrayList1.get(0);

        ptipodeclNode1 = new ADecObjTipoDecl(pdecobjNode2);
        }
	nodeList.add(ptipodeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ADecVarTipoDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoDecl ptipodeclNode1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        ptipodeclNode1 = new ADecVarTipoDecl(pdecvarNode2);
        }
	nodeList.add(ptipodeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ADecConstTipoDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoDecl ptipodeclNode1;
        {
            // Block
        PDecConst pdecconstNode2;
        pdecconstNode2 = (PDecConst)nodeArrayList1.get(0);

        ptipodeclNode1 = new ADecConstTipoDecl(pdecconstNode2);
        }
	nodeList.add(ptipodeclNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AFatorExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        pexprNode1 = new AFatorExpr(pfatorNode2);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ASomaExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpr pexprNode2;
        TSoma tsomaNode3;
        PFator pfatorNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexprNode1 = new ASomaExpr(pexprNode2, tsomaNode3, pfatorNode4);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AMenosExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpr pexprNode1;
        {
            // Block
        PExpr pexprNode2;
        TMenos tmenosNode3;
        PFator pfatorNode4;
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        pexprNode1 = new AMenosExpr(pexprNode2, tmenosNode3, pfatorNode4);
        }
	nodeList.add(pexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ATermoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pfatorNode1 = new ATermoFator(ptermoNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AMultFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMult tmultNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AMultFator(pfatorNode2, tmultNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce ADivFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TDiv tdivNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new ADivFator(pfatorNode2, tdivNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AModFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PFator pfatorNode2;
        TMod tmodNode3;
        PTermo ptermoNode4;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pfatorNode1 = new AModFator(pfatorNode2, tmodNode3, ptermoNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ANumeroTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TNumeroReal tnumerorealNode2;
        tnumerorealNode2 = (TNumeroReal)nodeArrayList1.get(0);

        ptermoNode1 = new ANumeroTermo(tnumerorealNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AParTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExpr pexprNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        ptermoNode1 = new AParTermo(tparesqNode2, pexprNode3, tpardirNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AAblocoblocoexp1BlocoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExp pblocoexpNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExpr pexprNode4;
        TFim tfimNode5;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        }
        pexprNode4 = (PExpr)nodeArrayList2.get(0);
        tfimNode5 = (TFim)nodeArrayList3.get(0);

        pblocoexpNode1 = new ABlocoBlocoExp(tinicioNode2, listNode3, pexprNode4, tfimNode5);
        }
	nodeList.add(pblocoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AAblocoblocoexp2BlocoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExp pblocoexpNode1;
        {
            // Block
        TInicio tinicioNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PExpr pexprNode5;
        TFim tfimNode6;
        tinicioNode2 = (TInicio)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pexprNode5 = (PExpr)nodeArrayList3.get(0);
        tfimNode6 = (TFim)nodeArrayList4.get(0);

        pblocoexpNode1 = new ABlocoBlocoExp(tinicioNode2, listNode4, pexprNode5, tfimNode6);
        }
	nodeList.add(pblocoexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce AChamadaMetodoChamada */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamada pchamadaNode1;
        {
            // Block
        TId tidNode2;
        TParEsq tparesqNode3;
        PListaExpr plistaexprNode4;
        TParDir tpardirNode5;
        tidNode2 = (TId)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistaexprNode4 = (PListaExpr)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);

        pchamadaNode1 = new AChamadaMetodoChamada(tidNode2, tparesqNode3, plistaexprNode4, tpardirNode5);
        }
	nodeList.add(pchamadaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AIdAtributo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAtributo patributoNode1;
        {
            // Block
        TId tidNode2;
        tidNode2 = (TId)nodeArrayList1.get(0);

        patributoNode1 = new AIdAtributo(tidNode2);
        }
	nodeList.add(patributoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce AAexpressoeslistaexpr1ListaExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpr plistaexprNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        }

        plistaexprNode1 = new AExpressoesListaExpr(pexprNode2, listNode3);
        }
	nodeList.add(plistaexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AAexpressoeslistaexpr2ListaExpr */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExpr plistaexprNode1;
        {
            // Block
        PExpr pexprNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pexprNode2 = (PExpr)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        plistaexprNode1 = new AExpressoesListaExpr(pexprNode2, listNode4);
        }
	nodeList.add(plistaexprNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AListaExprs */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExprs pexprsNode1;
        {
            // Block
        TVirgula tvirgulaNode2;
        PExpr pexprNode3;
        tvirgulaNode2 = (TVirgula)nodeArrayList1.get(0);
        pexprNode3 = (PExpr)nodeArrayList2.get(0);

        pexprsNode1 = new AListaExprs(tvirgulaNode2, pexprNode3);
        }
	nodeList.add(pexprsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce ATerminal$DefClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDefClasse pdefclasseNode1;
        pdefclasseNode1 = (PDefClasse)nodeArrayList1.get(0);
	if(pdefclasseNode1 != null)
	{
	  listNode2.add(pdefclasseNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ANonTerminal$DefClasse */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDefClasse pdefclasseNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdefclasseNode2 = (PDefClasse)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdefclasseNode2 != null)
	{
	  listNode3.add(pdefclasseNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce ATerminal$ListaRelacoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PListaRelacoes plistarelacoesNode1;
        plistarelacoesNode1 = (PListaRelacoes)nodeArrayList1.get(0);
	if(plistarelacoesNode1 != null)
	{
	  listNode2.add(plistarelacoesNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ANonTerminal$ListaRelacoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PListaRelacoes plistarelacoesNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistarelacoesNode2 = (PListaRelacoes)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistarelacoesNode2 != null)
	{
	  listNode3.add(plistarelacoesNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce ATerminal$Parametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PParametro pparametroNode1;
        pparametroNode1 = (PParametro)nodeArrayList1.get(0);
	if(pparametroNode1 != null)
	{
	  listNode2.add(pparametroNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ANonTerminal$Parametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PParametro pparametroNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparametroNode2 = (PParametro)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparametroNode2 != null)
	{
	  listNode3.add(pparametroNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATerminal$TipoDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PTipoDecl ptipodeclNode1;
        ptipodeclNode1 = (PTipoDecl)nodeArrayList1.get(0);
	if(ptipodeclNode1 != null)
	{
	  listNode2.add(ptipodeclNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce ANonTerminal$TipoDecl */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PTipoDecl ptipodeclNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptipodeclNode2 = (PTipoDecl)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptipodeclNode2 != null)
	{
	  listNode3.add(ptipodeclNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce ATerminal$DecConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecConst pdecconstNode1;
        pdecconstNode1 = (PDecConst)nodeArrayList1.get(0);
	if(pdecconstNode1 != null)
	{
	  listNode2.add(pdecconstNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ANonTerminal$DecConst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecConst pdecconstNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecconstNode2 = (PDecConst)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecconstNode2 != null)
	{
	  listNode3.add(pdecconstNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ATerminal$Exprs */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PExprs pexprsNode1;
        pexprsNode1 = (PExprs)nodeArrayList1.get(0);
	if(pexprsNode1 != null)
	{
	  listNode2.add(pexprsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ANonTerminal$Exprs */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PExprs pexprsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pexprsNode2 = (PExprs)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pexprsNode2 != null)
	{
	  listNode3.add(pexprsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {2, SHIFT, 1}, },
			{{-1, ERROR, 1}, {38, SHIFT, 5}, },
			{{-1, ERROR, 2}, {40, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, {2, SHIFT, 6}, },
			{{-1, ERROR, 4}, {20, SHIFT, 9}, {21, SHIFT, 10}, },
			{{-1, ERROR, 5}, {12, SHIFT, 13}, },
			{{-1, ERROR, 6}, {38, SHIFT, 14}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 1}, {2, SHIFT, 6}, },
			{{-1, ERROR, 9}, {2, SHIFT, 1}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 12}, {20, SHIFT, 9}, {21, SHIFT, 17}, },
			{{-1, ERROR, 13}, {38, SHIFT, 19}, },
			{{-1, ERROR, 14}, {0, SHIFT, 20}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 5}, },
			{{-1, ERROR, 20}, {13, SHIFT, 21}, {14, SHIFT, 22}, {15, SHIFT, 23}, },
			{{-1, ERROR, 21}, {38, SHIFT, 28}, },
			{{-1, ERROR, 22}, {10, SHIFT, 30}, {11, SHIFT, 31}, },
			{{-1, ERROR, 23}, {10, SHIFT, 30}, {11, SHIFT, 31}, },
			{{-1, ERROR, 24}, {8, SHIFT, 34}, {9, SHIFT, 35}, {23, SHIFT, 36}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 18}, },
			{{-1, ERROR, 29}, {37, SHIFT, 40}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 19}, },
			{{-1, ERROR, 32}, {37, SHIFT, 41}, },
			{{-1, ERROR, 33}, {37, SHIFT, 42}, },
			{{-1, ERROR, 34}, {37, SHIFT, 44}, },
			{{-1, ERROR, 35}, {10, SHIFT, 30}, {11, SHIFT, 31}, {38, SHIFT, 28}, },
			{{-1, ERROR, 36}, {8, SHIFT, 48}, },
			{{-1, ERROR, 37}, {1, SHIFT, 49}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 40}, {21, SHIFT, 50}, },
			{{-1, ERROR, 41}, {21, SHIFT, 51}, },
			{{-1, ERROR, 42}, {22, SHIFT, 52}, },
			{{-1, ERROR, 43}, {21, SHIFT, 53}, },
			{{-1, ERROR, 44}, {24, SHIFT, 54}, },
			{{-1, ERROR, 45}, {37, SHIFT, 55}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 48}, {37, SHIFT, 56}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 52}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 25}, {10, SHIFT, 30}, {11, SHIFT, 31}, {38, SHIFT, 28}, },
			{{-1, ERROR, 55}, {24, SHIFT, 66}, },
			{{-1, ERROR, 56}, {24, SHIFT, 67}, },
			{{-1, ERROR, 57}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 15}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, REDUCE, 41}, {30, SHIFT, 71}, {31, SHIFT, 72}, {32, SHIFT, 73}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 62}, {37, SHIFT, 74}, },
			{{-1, ERROR, 63}, {25, SHIFT, 75}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 26}, {10, SHIFT, 30}, {11, SHIFT, 31}, {38, SHIFT, 28}, },
			{{-1, REDUCE, 25}, {10, SHIFT, 30}, {11, SHIFT, 31}, {38, SHIFT, 28}, },
			{{-1, REDUCE, 25}, {10, SHIFT, 30}, {11, SHIFT, 31}, {38, SHIFT, 28}, },
			{{-1, ERROR, 68}, {25, SHIFT, 79}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 69}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 70}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 71}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 72}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 73}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 75}, {21, SHIFT, 85}, },
			{{-1, REDUCE, 62}, },
			{{-1, ERROR, 77}, {25, SHIFT, 86}, },
			{{-1, ERROR, 78}, {25, SHIFT, 87}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 42}, {30, SHIFT, 71}, {31, SHIFT, 72}, {32, SHIFT, 73}, },
			{{-1, REDUCE, 43}, {30, SHIFT, 71}, {31, SHIFT, 72}, {32, SHIFT, 73}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 86}, {21, SHIFT, 88}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 87}, {0, SHIFT, 90}, {5, SHIFT, 91}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 23}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 90}, {0, SHIFT, 90}, {1, SHIFT, 96}, {5, SHIFT, 91}, {13, SHIFT, 21}, {14, SHIFT, 22}, {15, SHIFT, 23}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, ERROR, 91}, {24, SHIFT, 104}, },
			{{-1, ERROR, 92}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 93}, {22, SHIFT, 106}, {27, SHIFT, 107}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 102}, {0, SHIFT, 90}, {1, SHIFT, 108}, {5, SHIFT, 91}, {13, SHIFT, 21}, {14, SHIFT, 22}, {15, SHIFT, 23}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, ERROR, 103}, {0, SHIFT, 90}, {1, SHIFT, 111}, {5, SHIFT, 91}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, ERROR, 104}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 105}, {25, SHIFT, 114}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 106}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, ERROR, 107}, {37, SHIFT, 116}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 64}, },
			{{-1, ERROR, 110}, {0, SHIFT, 90}, {1, SHIFT, 118}, {5, SHIFT, 91}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 66}, },
			{{-1, ERROR, 113}, {25, SHIFT, 119}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 114}, {0, SHIFT, 90}, {5, SHIFT, 91}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, REDUCE, 31}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 116}, {24, SHIFT, 121}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 37}, },
			{{-1, ERROR, 119}, {0, SHIFT, 90}, {5, SHIFT, 91}, {24, SHIFT, 92}, {37, SHIFT, 93}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 121}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 54}, {26, SHIFT, 125}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, ERROR, 124}, {25, SHIFT, 128}, },
			{{-1, ERROR, 125}, {24, SHIFT, 57}, {39, SHIFT, 58}, },
			{{-1, REDUCE, 69}, },
			{{-1, REDUCE, 55}, {26, SHIFT, 125}, },
			{{-1, REDUCE, 52}, },
			{{-1, REDUCE, 56}, {28, SHIFT, 69}, {29, SHIFT, 70}, },
			{{-1, REDUCE, 70}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 3}, },
			{{-1, 11}, {12, 18}, },
			{{-1, 4}, {9, 16}, },
			{{-1, 7}, {8, 15}, },
			{{-1, 24}, },
			{{-1, 37}, },
			{{-1, 97}, {20, 25}, },
			{{-1, 98}, {20, 26}, },
			{{-1, 99}, {20, 27}, },
			{{-1, 43}, },
			{{-1, 62}, {35, 45}, },
			{{-1, 46}, {21, 29}, },
			{{-1, 47}, {22, 32}, {23, 33}, },
			{{-1, 38}, },
			{{-1, 39}, },
			{{-1, 63}, {66, 77}, {67, 78}, },
			{{-1, -1}, },
			{{-1, 64}, {65, 76}, },
			{{-1, 100}, {87, 94}, {103, 112}, {110, 112}, {114, 120}, {119, 122}, },
			{{-1, 95}, },
			{{-1, 101}, {102, 109}, },
			{{-1, 59}, {57, 68}, {86, 89}, {92, 105}, {104, 113}, {106, 115}, {121, 123}, {125, 129}, },
			{{-1, 60}, {69, 80}, {70, 81}, },
			{{-1, 61}, {71, 82}, {72, 83}, {73, 84}, },
			{{-1, -1}, },
			{{-1, 117}, },
			{{-1, -1}, },
			{{-1, 124}, },
			{{-1, 126}, {127, 130}, },
			{{-1, 8}, },
			{{-1, 12}, },
			{{-1, 65}, },
			{{-1, 102}, },
			{{-1, 103}, {102, 110}, },
			{{-1, -1}, },
			{{-1, 127}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'classe'",
			"expecting: id class",
			"expecting: EOF",
			"expecting: 'classe', EOF",
			"expecting: '&', ';'",
			"expecting: 'filha da classe'",
			"expecting: 'início'",
			"expecting: 'objeto', 'var', 'const'",
			"expecting: 'bool', 'real'",
			"expecting: 'procedimento', 'função', '>>>'",
			"expecting: id",
			"expecting: 'bool', 'real', id class",
			"expecting: 'procedimento'",
			"expecting: 'fim'",
			"expecting: ';'",
			"expecting: ':='",
			"expecting: '('",
			"expecting: 'início', 'fim', 'se', 'procedimento', 'função', 'objeto', 'var', 'const', '>>>', '(', id",
			"expecting: '(', numero real",
			"expecting: 'bool', 'real', ')', id class",
			"expecting: 'início', 'fim', 'se', ';', '(', ')', ',', '+', '-', '*', '/', '%', id",
			"expecting: ';', '+', '-'",
			"expecting: ')'",
			"expecting: ')', '+', '-'",
			"expecting: ';', '(', numero real",
			"expecting: 'início', 'se', '(', id",
			"expecting: 'fim', '+', '-'",
			"expecting: 'início', 'fim', 'se', 'objeto', 'var', 'const', '(', id",
			"expecting: ':=', '.'",
			"expecting: 'início', 'fim', 'se', '(', id",
			"expecting: 'início', 'fim', 'se', '(', '+', '-', id",
			"expecting: ')', ',', '+', '-'",
			"expecting: ')', ','",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 1, 3, 3, 0, 3, 4, 4, 1, 6, 3, 4, 3, 4, 4, 7, 1, 8, 8, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 12, 13, 13, 13, 14, 14, 15, 14, 16, 10, 10, 10, 10, 3, 17, 17, 18, 17, 19, 16, 16, 18, 20, 21, 20, 20, 10, 22, 19, 19, 19, 19, 23, 18, 18, 18, 18, 18, 19, 14, 19, 22, 22, 20, 20, 20, 20, 20, 20, 13, 24, 25, 13, 26, 27, 16, 18, 28, 13, 29, 29, 27, 27, 27, 29, 27, 27, 29, 18, 23, 18, 10, 29, 27, 29, 29, 29, 23, 25, 30, 16, 29, 29, 25, 29, 18, 29, 31, 22, 18, 32, 32, 29, 31, 32, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
